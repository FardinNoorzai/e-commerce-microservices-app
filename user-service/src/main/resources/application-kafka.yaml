spring:
  config:
    import: optional:configserver:${CONFIG_SERVER_URL:http://localhost:8888}

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: ${KAFKA_PRODUCER_KEY_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer}
      value-serializer: ${KAFKA_PRODUCER_VALUE_SERIALIZER:org.springframework.kafka.support.serializer.JsonSerializer}
    consumer:
      key-deserializer: ${KAFKA_CONSUMER_KEY_DESERIALIZER:org.apache.kafka.common.serialization.StringDeserializer}
      value-deserializer: ${KAFKA_CONSUMER_VALUE_DESERIALIZER:org.springframework.kafka.support.serializer.JsonDeserializer}
      properties:
        spring.json.trusted.packages: ${KAFKA_CONSUMER_TRUSTED_PACKAGES:*}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  tracing:
    enabled: true
  otlp:
    tracing:
      endpoint: ${OTEL_TRACING_ENDPOINT:http://localhost:4318}
    metrics:
      endpoint: ${OTEL_METRICS_ENDPOINT:http://localhost:4318}
  prometheus:
    metrics:
      export:
        enabled: true

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}

  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: ${EUREKA_LEASE_RENEWAL:10}
    lease-expiration-duration-in-seconds: ${EUREKA_LEASE_EXPIRATION:30}
    hostname: ${HOSTNAME:localhost}
